let base_dir = "${env:test_data_dir}/in/";

let s2_product_dir = "s2tbx/S2/L1C/S2B_MSIL1C_20170315T013719_N0100_R000_T52LEK_20170315T013714.SAFE/";
let s2_file = "MTD_MSIL1C.xml";
let product_s2 = base_dir + s2_product_dir + s2_file;

let ns2_product_dir = "s2tbx/_collocation/";
let ns2_file = "NDSI_1703.dim";
let product_ns2 = base_dir + ns2_product_dir + ns2_file;

func test_resempling(path) {
    std:base:snap:start();
    std:base:snap:prepareTest();
    std:base:products:open(path);
    std:wait:wait:product_is_opened();
    click(std:components:NbMainWindow:Optical);
    click(std:components:NbMainWindow:Geometric);
    click(std:components:NbMainWindow:menuItemS2_Resampling_Processor);
    waitfor(std:components:dialogS2_Resampling, 1500);
    check_boolean(std:components:dialogS2_Resampling:saveToFileSelected, "checked", "isSelected");
    if '"$(isSelected)" == "true"' {
        click(std:components:dialogS2_Resampling:saveToFileSelected);
    }
    click(std:components:dialogS2_Resampling:apply);
}

test("s2Resampling", "test S2 Resampling operator on a sentinel 2 product") {
    test_resempling(product_s2);
    waitfor(std:components:dialogS2Res_Success);
    click(std:components:dialogS2Res_Success:buttonOK);
}

test("s2ErrorResampling", "test S2 Resampling operator on a wrong products") {
    test_resempling(product_ns2);
    waitfor(std:components:dialogSNAP_Error);
    click(std:components:dialogSNAP_Error:buttonCancel);  
}
